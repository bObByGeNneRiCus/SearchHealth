<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Search Health</title>
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")

    <script async defer
            src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDLkbksLFwndt1o03uJhqW3QaNJu6g6_fA&libraries=places">
    </script>

    <!--Load the API from the specified URL
    * The async attribute allows the browser to render the page while the API loads
    * The key parameter will contain your own API key (which is not needed for this tutorial)
    * The callback parameter executes the initMap() function
    -->

    <style>
        #map {
            width: 100%;
            height: 100%;
            /*border: solid;
            border-color:indigo;*/
        }

        body {
            font-family: 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif;
            background-color: white;
            margin: auto 25px auto 25px;
            padding: 15px 15px 15px 15px;
        }

        .body-content-left {
            display: inline-block;
            background-color: whitesmoke;
            width: 380px;
            height: 550px;
            padding-left: 15px;
            overflow-y: scroll;
            overflow-x:hidden;
        }

        .body-content-right {
            display: inline-block;
            width: 884px;
            height: 550px;
            padding-left: 5px;
        }

        header {
            background-color: steelblue;
            margin-bottom: 5px;
            color: whitesmoke;
            border-radius: 3px 4px;
        }

        h1, h2 {
            display: inline-block;
            padding-left: 10px;
        }

        .card {
            height: 50px;
            background-color: white;
            margin-bottom: 2.5px;
            line-height: 50px;
            padding: 0px initial 0px initial;
            word-wrap: break-word;
        }

        [class=info] p:first-of-type {
            font-weight: bold;
        }

        .tooltip:hover {
            content: attr(data-tip);
        }
    </style>
</head>
<body>
    <div class="">
        <header class="">
            <hgroup>
                <h1>Search Health</h1>
                <h2>- Pesquisa de Unidades de Sa&uacute;de</h2>
            </hgroup>
        </header>
        @RenderBody()
        <hr />
        <footer>
            <p>&copy; @DateTime.Now.Year - Search Health</p>
        </footer>
    </div>

    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")
    @RenderSection("scripts", required: false)
</body>
</html>

<script>
        //Query: select * from UnidadeSaude order by
        //geography:: STGeomFromText('POINT(' + convert(varchar(20), -30.0293501) + ' ' + convert(varchar(20), -51.2361831) + ')', 4326).STDistance(Geolocalizacao) desc
    var enderecoOrigem;
    var latitudeOrigem;
    var longitudeOrigem;
    var directionService;
    var showRoute;

    function clearSearch(parentDiv) {
        while (parentDiv.firstChild) {
            parentDiv.removeChild(parentDiv.firstChild);
        }
    }

    function getListUnidadeSaude() {
        $('#divAlertaPesquisa').hide();     
        if (latitudeOrigem) {
            $.ajax({
                type: 'POST',
                dataType: 'json',
                url: '@Url.Action("GetListUnidadeSaude")',
                success: function (lstUnidadeSaude) {
                    if (lstUnidadeSaude !== null) {
                        parentDiv = document.getElementById("unidadeSaudeBlock");
                        clearSearch(parentDiv);

                        $.each(lstUnidadeSaude, function (i, unidadeSaude) {
                            var divUnidade = document.createElement("div");
                            divUnidade.setAttribute('class', 'card');
                            divUnidade.innerHTML = unidadeSaude.Nome + ' - <a href="javascript:" onclick="exibirRota(' + unidadeSaude.Latitude + ', ' + unidadeSaude.Longitude + ')">Ver Rota</a>';
                            parentDiv.appendChild(divUnidade);
                        });

                        initMap(lstUnidadeSaude);
                    }
                },
                error: function (error) {
                    console.log(error);
                }
            });
        }
        else {
            $('#divAlertaPesquisa').show();
        }
    }

    function initMap(lstUnidadeSaude) {
        showRoute = new google.maps.DirectionsRenderer({ suppressMarkers: true });

        var uluru = { lat: latitudeOrigem, lng: longitudeOrigem };

        var map = new google.maps.Map(
            document.getElementById('map'), { zoom: 13, center: uluru });

        showRoute.setMap(map);
        showRoute.setPanel(document.getElementById('map'));

        var lstMarker = [];
        var markerOrigem = new google.maps.Marker({
            position: new google.maps.LatLng(latitudeOrigem, longitudeOrigem),
            icon: 'Content/Icons/male-2.png',
            map: map
        });

        var infoOrigem = new google.maps.InfoWindow({
            content: '<div class="info"><p>Endereço de origem</p><p>Endereço: ' + enderecoOrigem + '</p></div>'
        });

        google.maps.event.addListener(markerOrigem, 'click', function () {
            infoOrigem.open(map, markerOrigem);
        });

        lstMarker.push(markerOrigem);

        $.each(lstUnidadeSaude, function(i, unidadeSaude) {
            var marker = new google.maps.Marker({
                position: new google.maps.LatLng(unidadeSaude.Latitude, unidadeSaude.Longitude),
                icon: 'Content/Icons/firstaid.png',
                map: map,
                id: unidadeSaude.Id
            });

            var info = new google.maps.InfoWindow({
                content: '<div class="info"><p>' + unidadeSaude.Nome + '</p><p>Telefone: ' + unidadeSaude.Telefone + '</p><p>Endereço: ' + unidadeSaude.Endereço + '</p></div>'
            });

            google.maps.event.addListener(marker, 'click', function () {
                info.open(map, marker);
            });

            lstMarker.push(marker);
        });
    }

    function exibirRota(latitudeDestino, longitudeDestino) {
        var request = {
            origin: '' + latitudeOrigem + ', ' + longitudeOrigem + '',
            destination: '' + latitudeDestino + ', ' + longitudeDestino + '',
            travelMode: google.maps.DirectionsTravelMode.DRIVING
        };

        directionService.route(request, function (response, status) {
            if (status == google.maps.DirectionsStatus.OK) {
                showRoute.setDirections(response);
            }
        });
    }

    $(window).on("load", function () {
        directionService = new google.maps.DirectionsService();

        var places = new google.maps.places.Autocomplete(document.getElementById('txtEndereco'));
        google.maps.event.addListener(places, 'place_changed', function () {
            var place = places.getPlace();
            enderecoOrigem = place.formatted_address;
            latitudeOrigem = place.geometry.location.lat();
            longitudeOrigem = place.geometry.location.lng();
        });
    });
</script>